# taken and modified from https://github.com/philen/scala-jpackage-workflow-demo
# jpackage docs:  https://docs.oracle.com/en/java/javase/14/docs/specs/man/jpackage.html
# jpackage jep: https://openjdk.java.net/jeps/392
name: Build for Release

on:
  pull_request:
  push:
    branches: [ master, main, 2021-05-11-jpackage-release ]
    tags: [ "*" ]

env:
  pkg-assembly: 'krystal-bull-assembly-0.1.jar'
  pkg-name: 'krystalbull'
  pkg-version: '1.0.0'

jobs:
  fat:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build fat jar
        run: sbt assembly
      - name: Upload fat jar
        uses: actions/upload-artifact@v1
        with:
          name: jars
          path: "target/scala-2.13/"
  osx:
    needs: fat
    runs-on: [macos-latest]
    steps:
      - name: Import developer cert to keychain
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
          keychain-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
      - name: Import installer cert to keychain
        uses: apple-actions/import-codesign-certs@v1
        with:
          create-keychain: false
          p12-file-base64: ${{ secrets.CERTIFICATES_P12_INSTALLER }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
          keychain-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt' # See 'Supported distributions' for available options
          java-version: '16'
          java-package: jdk
          architecture: x64
      - name: Download fat jar
        uses: actions/download-artifact@v1
        with:
          name: jars
          path: "target/scala-2.13"
      - name: View Artifact name
        run: echo "${{ env.pkg-name }}-${{ env.pkg-version }}"
      # https://localazy.com/blog/how-to-automatically-sign-macos-apps-using-github-actions
      # codesign -v -v ${{ env.pkg-name }}-${{ env.pkg-version }}.dmg
      - name: Add cert to keychain and unlock keychain
        env:
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
        run: |
          echo "Hello world"
          security unlock-keychain -p $MACOS_CERTIFICATE_PWD signing_temp.keychain
          echo "1"
          security find-identity -v
          echo "2"
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $MACOS_CERTIFICATE_PWD signing_temp.keychain
          echo "===========jpackage begin================"
          java -version
          jpackage --version
          jpackage --verbose --name ${{ env.pkg-name }} --app-version ${{ env.pkg-version }} --mac-package-name ${{ env.pkg-name }} --type pkg -i target/scala-2.13/ --main-class com.krystal.bull.gui.GUI --main-jar ${{ env.pkg-assembly }} --icon src/main/resources/icons/krystal_bull.icns --mac-sign --mac-signing-keychain /Users/runner/Library/Keychains/signing_temp.keychain-db --mac-signing-key-user-name "Chris Stewart (9ZG3GPKHX8)"
          ls -l
      - name: 'Echo download path'
        run: echo ${{steps.download.outputs.download-path}}
      - name: Upload dmg
        uses: actions/upload-artifact@v1
        with:
          name: dmgs
          path: "${{ env.pkg-name }}-${{ env.pkg-version }}.dmg"
  windows:
    needs: fat
    runs-on: [windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '16.0.1'
          java-package: jdk
          architecture: x64
      - name: Download fat jar
        uses: actions/download-artifact@v1
        with:
          name: jars
          path: "target/scala-2.13"
      - name: Package jar as msi
        run: "jpackage --win-shortcut --win-menu --win-menu-group 'Krystal Bull' --name ${{env.pkg-name}} --app-version ${{ env.pkg-version }} --type msi -i target/scala-2.13/ --main-class com.krystal.bull.gui.GUI --main-jar ${{ env.pkg-assembly }} --icon src/main/resources/icons/krystal_bull.ico --verbose"
      - name: View artifacts
        run: dir
      - name: Upload installer
        uses: actions/upload-artifact@v1
        with:
          name: msis
          path: "${{ env.pkg-name }}-${{ env.pkg-version }}.msi"
  linux:
    needs: fat
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '14.0.0'
          java-package: jdk
          architecture: x64
      - name: Download fat jar
        uses: actions/download-artifact@v1
        with:
          name: jars
          path: "target/scala-2.13"
      - name: 'Echo download path'
        run: echo ${{steps.download.outputs.download-path}}
      - name: Package jar as debian package
        run: "jpackage --linux-shortcut --name ${{ env.pkg-name }} --app-version ${{ env.pkg-version }} --type deb -i target/scala-2.13/ --main-class com.krystal.bull.gui.GUI --main-jar ${{ env.pkg-assembly }} --icon src/main/resources/icons/krystal_bull.png"
      - name: View Artifacts
        run: ls -l
      - name: Print working dir
        run: pwd
      - name: Upload deb
        uses: actions/upload-artifact@v1
        with:
          name : debs
          path: "${{ env.pkg-name }}_${{ env.pkg-version }}-1_amd64.deb"
